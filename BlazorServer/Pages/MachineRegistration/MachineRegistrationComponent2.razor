@using BlazorServer.Services
@using System.Net.Http.Headers
@inject ApiService _apiService
@inject IConfiguration configuration
@inject IClientOperations _clientOperations
@using FluentValidation;
@using FluentValidation.Validators;

<div class="container">

    <h3>Machine Registration</h3>

    @if (FModel != null)
    {
        <EditForm OnValidSubmit="Submit" Model="FModel">
            <FluentValidator />
            <div class="row">
                <div class="col-6">
                    <InputText id="Hash" class="form-control" @bind="@FModel.Hash" placeholder="Hash" /><br />
                    <ValidationMessage For="() => FModel.Hash"></ValidationMessage>
                </div>
                <div class="col-6">
                    <InputText id="MachineName" class="form-control" @bind="@FModel.MachineName" placeholder="MachineName" /><br />
                    <ValidationMessage For="() => FModel.MachineName"></ValidationMessage>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <InputText id="Notes" class="form-control" @bind-Value="@FModel.Notes" placeholder="Notes" /><br />
                    <ValidationMessage For="() => FModel.Notes"></ValidationMessage>
                </div>
            </div>
            <button id="Save" type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    }
</div>

@code {
    public MachineRegistrationCommand FModel { get; set; } = new MachineRegistrationCommand();

    protected override async Task OnInitializedAsync()
    {
        FModel = new MachineRegistrationCommand();
        _apiService.HttpClient.BaseAddress = new Uri(configuration["API"]);
    }

    protected async Task Submit()
    {
       
    }
}
