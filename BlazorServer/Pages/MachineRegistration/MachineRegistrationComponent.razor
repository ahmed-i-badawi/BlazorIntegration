@using BlazorServer.Services
@using System.Net.Http.Headers
@using global::Shared.Commands
@inject HttpClient _http
@inject ApiService apiService

<h3>Machine Registration Component</h3>

@if (FModel != null)
{
    <div class="container">
        <input type="text" id="Hash" class="form-control" @bind="@FModel.Hash" placeholder="Hash" /><br />
        <input type="text" id="MachineName" class="form-control" @bind="@FModel.MachineName" placeholder="MachineName" /><br />
        <input type="text" id="Notes" class="form-control" @bind="@FModel.Notes" placeholder="Notes" /><br />

        <input type="button" id="Add Machine" value="Add Machine" class="btn btn-primary" @onclick="@Submit" />
    </div>

    <ul id="discussion">
        @foreach (var message in _messages)
        {
            <li>@message</li>
        }
    </ul>

}

@code {
    public MachineRegistrationCommand FModel { get; set; } = new MachineRegistrationCommand();
    private IList<string> _messages = new List<string>();
    private string _username;
    public string Status { get; set; }

    protected override async Task OnInitializedAsync()
    {
        FModel = new MachineRegistrationCommand();
    }

    protected async Task Submit()
    {
        var register = _http.PostAsJsonAsync($"api/Machine/RegisterMachine", FModel);
        bool registerRes = await register.Result.Content.ReadFromJsonAsync<bool>();
        if (registerRes)
        {
            _messages.Add($"Machine {FModel.MachineName} Registered Successfully");
        }
        else
        {
            _messages.Add($"Machine {FModel.MachineName} Not Connected or Already Registered");
        }
        StateHasChanged();
    }
}
